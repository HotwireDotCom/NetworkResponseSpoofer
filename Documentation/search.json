{"Structs/URLPathRangeReplacement.html#/s:22NetworkResponseSpoofer23URLPathRangeReplacementV5start3end11replacementACSS_SSSgSStcfc":{"name":"init(start:end:replacement:)","abstract":"<p>Undocumented</p>","parent_name":"URLPathRangeReplacement"},"Structs/URLPathRangeReplacement.html":{"name":"URLPathRangeReplacement","abstract":"<p>Undocumented</p>"},"Protocols/SpooferDelegate.html#/c:@M@NetworkResponseSpoofer@objc(pl)SpooferDelegate(im)spooferDidStartRecording:":{"name":"spooferDidStartRecording(_:)","abstract":"<p>Method invoked on the delegate when spoofer starts recording a scenario</p>","parent_name":"SpooferDelegate"},"Protocols/SpooferDelegate.html#/c:@M@NetworkResponseSpoofer@objc(pl)SpooferDelegate(im)spooferDidStopRecording:":{"name":"spooferDidStopRecording(_:)","abstract":"<p>Method invoked on the delegate when the spoofer stops recording a scenario</p>","parent_name":"SpooferDelegate"},"Protocols/SpooferDelegate.html#/c:@M@NetworkResponseSpoofer@objc(pl)SpooferDelegate(im)spooferDidStartReplaying:":{"name":"spooferDidStartReplaying(_:)","abstract":"<p>Method invoked on the delegate when the spoofer starts replaying a pre-recorded scenario</p>","parent_name":"SpooferDelegate"},"Protocols/SpooferDelegate.html#/c:@M@NetworkResponseSpoofer@objc(pl)SpooferDelegate(im)spooferDidStopReplaying:":{"name":"spooferDidStopReplaying(_:)","abstract":"<p>Method invoked on the delegate when the spoofer stops replay of a given scenario</p>","parent_name":"SpooferDelegate"},"Protocols/SpooferDelegate.html":{"name":"SpooferDelegate","abstract":"<p>Delegate methods invoked by Spoofer whenever its state changes</p>"},"Extensions/URLSessionConfiguration.html#/s:So25NSURLSessionConfigurationC22NetworkResponseSpooferE7spoofedABvpZ":{"name":"spoofed","abstract":"<p>Spoofed Default URLSessionConfiguration (As a property)</p>","parent_name":"URLSessionConfiguration"},"Extensions/URLSessionConfiguration.html#/s:So25NSURLSessionConfigurationC22NetworkResponseSpooferE07swizzleB0yyFZ":{"name":"swizzleConfiguration()","abstract":"<p>Swizzle URLSessionConfiguration to insert Spoofer Interceptor protocols</p>","parent_name":"URLSessionConfiguration"},"Extensions/URLSessionConfiguration.html#/c:@CM@NetworkResponseSpoofer@@objc(cs)NSURLSessionConfiguration(cm)spoofedDefault":{"name":"spoofedDefault()","abstract":"<p>Spoofed Default URLSessionConfiguration (As a method)</p>","parent_name":"URLSessionConfiguration"},"Extensions/URLSessionConfiguration.html#/c:@CM@NetworkResponseSpoofer@@objc(cs)NSURLSessionConfiguration(cm)spoofedEphemeral":{"name":"spoofedEphemeral()","abstract":"<p>Spoofed Ephemeral URLSessionConfiguration</p>","parent_name":"URLSessionConfiguration"},"Extensions/URLSessionConfiguration.html":{"name":"URLSessionConfiguration"},"Enums/StoreError.html#/s:22NetworkResponseSpoofer10StoreErrorO16scenarioNotFoundyA2CmF":{"name":"scenarioNotFound","abstract":"<p>Undocumented</p>","parent_name":"StoreError"},"Enums/StoreError.html#/s:22NetworkResponseSpoofer10StoreErrorO20unableToSaveScenarioyA2CmF":{"name":"unableToSaveScenario","abstract":"<p>Undocumented</p>","parent_name":"StoreError"},"Enums/StoreError.html#/s:22NetworkResponseSpoofer10StoreErrorO012unableToSaveB0yA2CmF":{"name":"unableToSaveResponse","abstract":"<p>Undocumented</p>","parent_name":"StoreError"},"Enums/StoreError.html#/s:22NetworkResponseSpoofer10StoreErrorO22unableToDeleteScenarioyA2CmF":{"name":"unableToDeleteScenario","abstract":"<p>Undocumented</p>","parent_name":"StoreError"},"Enums/SpooferError.html#/s:22NetworkResponseSpoofer0C5ErrorO08diskReadD0yA2CmF":{"name":"diskReadError","abstract":"<p>Error when unable to read from the scenario file on disk</p>","parent_name":"SpooferError"},"Enums/SpooferError.html#/s:22NetworkResponseSpoofer0C5ErrorO09diskWriteD0yA2CmF":{"name":"diskWriteError","abstract":"<p>Error when unable to write to a scenario file on disk</p>","parent_name":"SpooferError"},"Enums/SpooferError.html#/s:22NetworkResponseSpoofer0C5ErrorO16scenarioURLErroryA2CmF":{"name":"scenarioURLError","abstract":"<p>Error when unable to generate a scenario url</p>","parent_name":"SpooferError"},"Enums/SpooferError.html#/s:22NetworkResponseSpoofer0C5ErrorO09emptyFileD0yA2CmF":{"name":"emptyFileError","abstract":"<p>Error when empty scenario file is found on disk</p>","parent_name":"SpooferError"},"Enums/SpooferError.html#/s:22NetworkResponseSpoofer0C5ErrorO015documentsAccessD0yA2CmF":{"name":"documentsAccessError","abstract":"<p>Error when unable to access sandboxed documents folder of the app</p>","parent_name":"SpooferError"},"Enums/SpooferError.html#/s:22NetworkResponseSpoofer0C5ErrorO014folderCreationD0yA2CmF":{"name":"folderCreationError","abstract":"<p>Error when unable to create a folder inside the Documents folder</p>","parent_name":"SpooferError"},"Enums/SpooferError.html#/s:22NetworkResponseSpoofer0C5ErrorO013emptyScenarioD0yA2CmF":{"name":"emptyScenarioError","abstract":"<p>Error when scenario file has no NetworkResponses recorded</p>","parent_name":"SpooferError"},"Enums/SpooferError.html#/s:22NetworkResponseSpoofer0C5ErrorO07noSavedbD0yA2CmF":{"name":"noSavedResponseError","abstract":"<p>Error when no saved response is found for a particular request</p>","parent_name":"SpooferError"},"Enums/SpooferError.html#/s:22NetworkResponseSpoofer0C5ErrorO016scenarioDeletionD0yA2CmF":{"name":"scenarioDeletionError","abstract":"<p>Error when unable to delete a scenario from disk</p>","parent_name":"SpooferError"},"Enums/SpooferError.html":{"name":"SpooferError","abstract":"<p>Errors thrown by the Spoofer</p>"},"Enums/StoreError.html":{"name":"StoreError","abstract":"<p>Errors thrown from Realm Datastore</p>"},"Global Variables.html#/s:22NetworkResponseSpoofer16defaultSuiteNameSSvp":{"name":"defaultSuiteName","abstract":"<p>Undocumented</p>"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)delegate":{"name":"delegate","abstract":"<p>The delegate for the Spoofer, which will be notified whenever the Spoofer state changes</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)scenarioName":{"name":"scenarioName","abstract":"<p>The scenario name being recorded or replayed. Returns empty when the Spoofer is not active</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)suiteName":{"name":"suiteName","abstract":"<p>The suite under which the scenario is being recorded or replayed. Returns empty when the Spoofer is not active</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)hostNamesToSpoof":{"name":"hostNamesToSpoof","abstract":"<p>White list of host names the Spoofer would intercept. If set, only whitelist host names would be recorded</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)hostNamesToIgnore":{"name":"hostNamesToIgnore","abstract":"<p>Blacklist of hostnames. If set, these host names would be ignored from recording</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)pathsToIgnore":{"name":"pathsToIgnore","abstract":"<p>Blacklist of Path&rsquo;s. If set, these path names would be ignored from recording</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)subDomainsToNormalize":{"name":"subDomainsToNormalize","abstract":"<p>Subdomains to normalize. Useful to ignore subdomain components like example.qa.com so the final URL is example.com. This is useful to record from one environment and playback in another.</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)queryParametersToNormalize":{"name":"queryParametersToNormalize","abstract":"<p>Query parameters to normalize. Useful when query parameters are dynamic causing URL&rsquo;s to mismatch.</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)pathComponentsToNormalize":{"name":"pathComponentsToNormalize","abstract":"<p>Path components that need to be ignored via URL normalization. Useful when path differs but the response is similar, as in the case of multiple API versions. e.g., v1, v1.1, v2 etc</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/s:22NetworkResponseSpoofer0C0C19pathRangesToReplaceSayAA23URLPathRangeReplacementVGvpZ":{"name":"pathRangesToReplace","abstract":"<p>Path components that need to be replaced via URL normalization. Useful when path differs due to dynamic path components but the response is similar.","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)normalizeQueryValues":{"name":"normalizeQueryValues","abstract":"<p>Enable normalizing query values, by taking only the keys and dropping the values.</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)allowSelfSignedCertificate":{"name":"allowSelfSignedCertificate","abstract":"<p>Allows toggling accepting of self signed certificates</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)spooferLogNotification":{"name":"spooferLogNotification","abstract":"<p>Fired whenever the Spoofer logs some meaningful output, as in request intercept, record start/stop etc</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)spooferStartedRecordingNotification":{"name":"spooferStartedRecordingNotification","abstract":"<p>Notification fired when spoofer starts recording a scenario.</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)spooferStoppedRecordingNotification":{"name":"spooferStoppedRecordingNotification","abstract":"<p>Notification fired when spoofer stops recording a scenario. Userinfo dictionary has key <q>scenario</q> which has the name of the scenario</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)spooferStartedReplayingNotification":{"name":"spooferStartedReplayingNotification","abstract":"<p>Notification fired when spoofer starts replaying a scenario. Userinfo dictionary has key <q>scenario</q> which has the name of the scenario</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@M@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)spooferStoppedReplayingNotification":{"name":"spooferStoppedReplayingNotification","abstract":"<p>Notification fired when spoofer stops replaying a scenario. Userinfo dictionary has key <q>scenario</q> which has the name of the scenario</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@CM@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)isRecording":{"name":"isRecording","abstract":"<p>Returns true if the Spoofer is recording a scenario</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@CM@NetworkResponseSpoofer@objc(cs)Spoofer(cm)startRecordingWithScenarioName:inSuite:":{"name":"startRecording(scenarioName:inSuite:)","abstract":"<p>Start recording a new scenario</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@CM@NetworkResponseSpoofer@objc(cs)Spoofer(cm)stopRecording":{"name":"stopRecording()","abstract":"<p>Stop recording the current scenario</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@CM@NetworkResponseSpoofer@objc(cs)Spoofer(cpy)isReplaying":{"name":"isReplaying","abstract":"<p>Returns true if the Spoofer is replaying a scenario</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@CM@NetworkResponseSpoofer@objc(cs)Spoofer(cm)startReplayingWithScenarioName:inSuite:":{"name":"startReplaying(scenarioName:inSuite:)","abstract":"<p>Starts replaying a recorded scenario</p>","parent_name":"Spoofer"},"Classes/Spoofer.html#/c:@CM@NetworkResponseSpoofer@objc(cs)Spoofer(cm)stopReplaying":{"name":"stopReplaying()","abstract":"<p>Stop replaying the current scenario</p>","parent_name":"Spoofer"},"Classes/SpooferReplayer.html#/c:@M@NetworkResponseSpoofer@objc(cs)SpooferReplayer(cm)canInitWithRequest:":{"name":"canInit(with:)","abstract":"<p>Undocumented</p>","parent_name":"SpooferReplayer"},"Classes/SpooferReplayer.html#/c:@M@NetworkResponseSpoofer@objc(cs)SpooferReplayer(cm)canonicalRequestForRequest:":{"name":"canonicalRequest(for:)","abstract":"<p>Undocumented</p>","parent_name":"SpooferReplayer"},"Classes/SpooferReplayer.html#/c:@M@NetworkResponseSpoofer@objc(cs)SpooferReplayer(cm)requestIsCacheEquivalent:toRequest:":{"name":"requestIsCacheEquivalent(_:to:)","abstract":"<p>Undocumented</p>","parent_name":"SpooferReplayer"},"Classes/SpooferReplayer.html#/c:@M@NetworkResponseSpoofer@objc(cs)SpooferReplayer(im)startLoading":{"name":"startLoading()","abstract":"<p>Undocumented</p>","parent_name":"SpooferReplayer"},"Classes/SpooferReplayer.html#/c:@M@NetworkResponseSpoofer@objc(cs)SpooferReplayer(im)stopLoading":{"name":"stopLoading()","abstract":"<p>Undocumented</p>","parent_name":"SpooferReplayer"},"Classes/SpooferRecorder.html#/c:@M@NetworkResponseSpoofer@objc(cs)SpooferRecorder(cm)canInitWithRequest:":{"name":"canInit(with:)","abstract":"<p>Undocumented</p>","parent_name":"SpooferRecorder"},"Classes/SpooferRecorder.html#/c:@M@NetworkResponseSpoofer@objc(cs)SpooferRecorder(cm)canonicalRequestForRequest:":{"name":"canonicalRequest(for:)","abstract":"<p>Undocumented</p>","parent_name":"SpooferRecorder"},"Classes/SpooferRecorder.html#/c:@M@NetworkResponseSpoofer@objc(cs)SpooferRecorder(cm)requestIsCacheEquivalent:toRequest:":{"name":"requestIsCacheEquivalent(_:to:)","abstract":"<p>Undocumented</p>","parent_name":"SpooferRecorder"},"Classes/SpooferRecorder.html#/c:@M@NetworkResponseSpoofer@objc(cs)SpooferRecorder(im)startLoading":{"name":"startLoading()","abstract":"<p>Undocumented</p>","parent_name":"SpooferRecorder"},"Classes/SpooferRecorder.html#/c:@M@NetworkResponseSpoofer@objc(cs)SpooferRecorder(im)stopLoading":{"name":"stopLoading()","abstract":"<p>Undocumented</p>","parent_name":"SpooferRecorder"},"Classes/SpooferRecorder.html#/c:@CM@NetworkResponseSpoofer@objc(cs)SpooferRecorder(im)URLSession:didReceiveChallenge:completionHandler:":{"name":"urlSession(_:didReceive:completionHandler:)","abstract":"<p>Undocumented</p>","parent_name":"SpooferRecorder"},"Classes/SpooferRecorder.html#/c:@CM@NetworkResponseSpoofer@objc(cs)SpooferRecorder(im)URLSession:dataTask:didReceiveResponse:completionHandler:":{"name":"urlSession(_:dataTask:didReceive:completionHandler:)","abstract":"<p>Undocumented</p>","parent_name":"SpooferRecorder"},"Classes/SpooferRecorder.html#/c:@CM@NetworkResponseSpoofer@objc(cs)SpooferRecorder(im)URLSession:dataTask:didReceiveData:":{"name":"urlSession(_:dataTask:didReceive:)","abstract":"<p>Undocumented</p>","parent_name":"SpooferRecorder"},"Classes/SpooferRecorder.html#/c:@CM@NetworkResponseSpoofer@objc(cs)SpooferRecorder(im)URLSession:task:didCompleteWithError:":{"name":"urlSession(_:task:didCompleteWithError:)","abstract":"<p>Undocumented</p>","parent_name":"SpooferRecorder"},"Classes/SpooferRecorder.html":{"name":"SpooferRecorder","abstract":"<p>URLProtocol subclass to be inserted in your URLSessionConfiguration.protocols stack to enable Recording. The methods are not to be overriden for Spoofer to work correctly.</p>"},"Classes/SpooferReplayer.html":{"name":"SpooferReplayer","abstract":"<p>URLProtocol subclass to be inserted in your URLSessionConfiguration.protocols stack to enable Replaying. The methods are not to be overriden for Spoofer to work correctly.</p>"},"Classes/Spoofer.html":{"name":"Spoofer","abstract":"<p>NetworkResponseSpoofer is a network request-response recording and replaying library for iOS. It&rsquo;s built on top of the <a href=\"http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/URLLoadingSystem/URLLoadingSystem.html\">Foundation URL Loading System</a> to make recording and replaying network requests really simple.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}